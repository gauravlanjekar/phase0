AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  Environment:
    Type: String
    Default: dev
Resources:
  MissionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: missions-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
  MissionDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: mission-data-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: missionId
        AttributeType: S
      - AttributeName: tabIndex
        AttributeType: S
      KeySchema:
      - AttributeName: missionId
        KeyType: HASH
      - AttributeName: tabIndex
        KeyType: RANGE
  MissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MissionFunction
      Handler: missions.handler
      Runtime: nodejs18.x
      Timeout: 30
      Environment:
        Variables:
          MISSIONS_TABLE:
            Ref: MissionsTable
          MISSION_DATA_TABLE:
            Ref: MissionDataTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: MissionsTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: MissionDataTable
      Events:
        GetMissions:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions
            Method: get
        CreateMission:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions
            Method: post
        GetMission:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}
            Method: get
        DeleteMission:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}
            Method: delete
        GetTabData:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}/tabs/{tabIndex}
            Method: get
        SaveTabData:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}/tabs/{tabIndex}
            Method: put
        UpdateMission:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}
            Method: put
    Metadata:
      SamResourceId: MissionFunction
  MissionApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Environment
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      Auth:
        ApiKeyRequired: false
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiUrl
