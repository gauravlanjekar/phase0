AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  Environment:
    Type: String
    Default: dev
Resources:
  MissionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: missions-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
  MissionDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: mission-data-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: missionId
        AttributeType: S
      - AttributeName: tabIndex
        AttributeType: S
      KeySchema:
      - AttributeName: missionId
        KeyType: HASH
      - AttributeName: tabIndex
        KeyType: RANGE
  MissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MissionFunction
      Handler: missions.handler
      Runtime: nodejs18.x
      Timeout: 30
      Environment:
        Variables:
          MISSIONS_TABLE:
            Ref: MissionsTable
          MISSION_DATA_TABLE:
            Ref: MissionDataTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: MissionsTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: MissionDataTable
      Events:
        GetMissions:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions
            Method: get
        CreateMission:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions
            Method: post
        GetMission:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}
            Method: get
        DeleteMission:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}
            Method: delete
        GetTabData:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}/tabs/{tabIndex}
            Method: get
        SaveTabData:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}/tabs/{tabIndex}
            Method: put
        UpdateMission:
          Type: Api
          Properties:
            RestApiId:
              Ref: MissionApi
            Path: /missions/{id}
            Method: put
    Metadata:
      SamResourceId: MissionFunction
  MissionApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Environment
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      Auth:
        ApiKeyRequired: false
  UIBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: mission-admin-ui-${Environment}-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
  UIBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: UIBucket
      PolicyDocument:
        Statement:
        - Sid: PublicReadGetObject
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: ${UIBucket.Arn}/*
  UIDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName:
            Fn::GetAtt:
            - UIBucket
            - RegionalDomainName
          Id: S3Origin
          S3OriginConfig:
            OriginAccessIdentity: ''
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          CachedMethods:
          - GET
          - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        CustomErrorResponses:
        - ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: /index.html
        - ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: /index.html
        PriceClass: PriceClass_100
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${MissionApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiUrl
  UIBucketName:
    Description: S3 bucket name for UI hosting
    Value:
      Ref: UIBucket
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-UIBucket
  UIUrl:
    Description: CloudFront distribution URL for UI
    Value:
      Fn::Sub: https://${UIDistribution.DomainName}
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-UIUrl
